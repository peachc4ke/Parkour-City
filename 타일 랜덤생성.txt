using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class TileManager : MonoBehaviour
{
  public GameObject[] tilePrefabs; //타일들을 프리팹으로 만들기
  //길이 총 5개이므로 size를 7로 해서 Element 칸을 7개로 만든다.
  private Transform playerTransform;
  private float spawnZ = -6.0f;
  private float tileLength = 12.0f; //타일 길이 지정이 필요할까
  private int amnTilesOnScreen = 2;
  private int lastPrefabIndex = 0;

  private List<GameObject> activeTiles;

  void Start()
{
 activeTiles = new List<GameObject>();
 playerTransform = Gamebject.FindGameObjectWithTag("Player").transform;

 for(int i = 0; i < amntilesOnScreen; i++)
     {
      if (i  < 2)
         SpawnTile (0);
      else
         SpawnTile ();
     }
}
  void Update()
{
  if(playerTransform.position.z > (spawnZ - amnTilesOnScreen * tileLength)
  {
      SpawnTile (); //타일 생성
      DeleteTile (); //타일 삭제
  }
}
  private void SpawnTile(int prefabIndex = -1)
  {
   GameObject go;
   if(prefabindex == -1)
       go = Instantiate(tilePrefabs[RandomPrefabIndex()]) as GameObject;
   else
       go = Instantiate(tilePrefabs[prefabimdex] as GameObject;
   go.transform.SetParent (transform);
   go.transform.position = Vector3.forward * spawnZ;
   spawnZ += tileLength;//타일의 길이가 필요없기 때문에 이부분 수정해야함.
   activeTiles.Add (go);
  }

  private void DeleteTile() //충돌했을 때의 조건을 넣어준다.
  {
   Destroy(activeTiles [0]);
   activeTiles.RemoveAt (0);
  }

 private int RandomPrefavindex() //랜덤으로 만들어내는 함수
 {
  if (tilePrefabs.Length <= 1)
    return 0;
  int randomIndex = lastPrefabindex;
  while (randomIndex == lastPrefavindex)
  {
   randomIndex = Random.Range(0, tilePrefabs.Length);
  }
  lastprefabIndex = randomIndex;
  return randomIndex;
 }
}
